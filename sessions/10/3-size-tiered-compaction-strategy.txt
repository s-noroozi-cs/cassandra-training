$ docker run --rm -it --name cassandra cassandra:5.0.3

$ docker exec -it cassandra cqlsh

cqlsh> CREATE KEYSPACE rayan WITH replication = {'class': 'SimpleStrategy', 'replication_factor': 1};

cqlsh> CREATE TABLE rayan.sensor_data ( id uuid , time timestamp , temperature float , humidity float, primary KEY (id, time )) WITH compaction = {'class': 'SizeTieredCompactionStrategy'};

# create cql file with 1K insert statments

$ docker exec -it cassandra bash

$ for i  in {1..1000}; do echo "INSERT INTO rayan.sensor_data (id , time , temperature , humidity ) VALUES ( uuid(), totimestamp(now()),$i,$(expr $i + 1));" >> insert.cql; done;

# please repeat following steps in with keeping order for 4 times 
1. 
    $ cqlsh -f insert.cql;
2. 
    $ nodetool flush
3. 
    $ du -h /var/lib/cassandra/data/rayan -d 1

Please tell me what happened ? 


STCS Compaction Trigger
    When Cassandra detects multiple SSTables of similar size 
    (default: 4 SSTables), it triggers compaction:

Key STCS Characteristics:
    
    1. Groups by size: 
        Compacts SSTables of similar sizes together
    
    2. Tiered approach: 
        Creates larger and larger SSTables over time
    
    3. Write-optimized: 
        Good for write-heavy workloads (like our sensor data)

    4. Space amplification: 
        May temporarily use more disk space during compaction

Monitoring Compaction:
    
    # View compaction statistics
    $ nodetool compactionstats

    # Force compaction (for testing)
    
    $nodetool compact {KEYSPACE} {TABLE}